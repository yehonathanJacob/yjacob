"""
Django settings for ui project.

Generated by 'django-admin startproject' using Django 1.11.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import sys,os,logging

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
ICX_ROOT = os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(BASE_DIR))))

_libs = ["/lib/python","/lib"]
for l in _libs:
    sys.path.append(os.environ['ICX_ROOT']+l)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2n=d=p@x(ngl4v$17y-92$4z!df80$(i+@32)bpxyefewl4z_m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'food.apps.FoodConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ui.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ui.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
POSTGRES_HOST = os.environ.get('FOODDB_POSTGRES_HOST', 'pgsql')
POSTGRES_PORT = os.environ.get('FOODDB_POSTGRES_PORT', '5432')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'food',
        'USER': 'food',
        'PASSWORD': 'foooddd',
        'HOST': POSTGRES_HOST,
        'PORT': POSTGRES_PORT,
    }
}

ADMINS = [
    ('Alex', 'alex@icx-il.com'),
]

SERVER_EMAIL = 'reports@icx-il.com'
EMAIL_HOST = 'email-smtp.eu-west-1.amazonaws.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'AKIAJIRIX4Y5ZKRJV2XA'
EMAIL_HOST_PASSWORD = 'AlZdOeYoDYO7j6otEzmF+QJpnA1aG42BModBYzcOYPj/'


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_ROOT = '/static/'
STATIC_URL = '/static/'


IMAGES_ROOT = '/weka/IMAGE/CLASSIFICATION/'
CUSTOM_DATA_DB = 'FoodDB'

#### API settings
FFMPEG = '/bin/ffmpeg'
TMP_DIRECTORY = '/dev/shm/'
FOODDB_HOST = 'https://' + os.environ.get('FOODDB_POSTGRESS', 'pgsql')
logging.info("Using settings_dev.py")

LOGIN_REDIRECT_URL = '/'  # redirect to homepage after login


IMAGE_ANALYSIS = os.environ.get('IMAGE_ANALYSIS',"http://imgam2.icx-il.com:5000")

# NLP
NLP_SERVER =  os.environ.get('NLP_HOST',  'nlp2.icx-il.com')
NLP_PORT = '5000'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,

    'formatters': {
        'verbose': {
            'format': '(%(asctime)s %(levelname)s) [%(module)s:%(funcName)s:%(lineno)d] %(message)s'
        },        
    },

    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',   
            'formatter': 'verbose'
        },
    },

    'loggers': {
        'debug': {
            'handlers': ['console'],
            'level': 'DEBUG'
        },
    },
}
