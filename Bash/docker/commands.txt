docker rm <container_name> // to remove container
docker rm -f $(docker ps -a -q) // to delete all containers
docker rmi <image_name> // to remove image (DELETE ALL DEPENTED CONTAINER FIRST)
docker rmi -f $(docker images -q) // to delete all images
docker stop $(docker ps -a -q) // to stop all containers

docker ps // show all runnig containers
docker ps -a // show all existing containers
docker images // show all existing images

docker pull <image> // made to just download an exsiting image from hub.docker.com
docker run <image> // to run the images as a new container
docker stop <image> // to stop the images as a new container
docker run -d <image> // to run image in the backgroun (to be abel return to promote).
docker attach <image_id> // to attach back to docker image
docker logs <image_id> // to view logs of image

docekr run -p <external_port>:<internal_port> // to bind an external port for internal container
docekr run --network=host // to just use host network insted of mapping ports
docekr run -v <external_path>:<internal_path> // to bind an external path for internal container

docker run -e ENV_NAME="env value" // to create enviroment variable
docker run -i // to permit input from stdin
docker run -t // to permit output to stdout

docker build . -t <web_server/exampel1>
docker build <path_to_docker_file> -t <name_of_created_image>

docker run -it --entrypoint sh <image_name> // to see bash in image
docker exec -it <containerId> bash // to see bash in container
docker run -it --rm python:rc // run lateset python version
docker cp <containerId>:/file/path/in/container/file /host/local/path/file

docker volume create data_volume // to create volume shared by docker
docker run -v data_volume:/var/lib/mysql mysql //to mount volume to the docker
docker run -v /path/to/local/mount:/path/in/the/docker <host_name> //to mount data from the PC to the docker
docker run --name=name_for_container <image> // to give a name and run image
docker run --link <container_name>:<to_host_name>


docker-compose up -d // to load all containers
docker-compose up // to load all containers with logs
docker-compose down // to stop + remove all containers
docker-compose stop // to just stop all containers (to avoid rebuild the containers later)
docker-compose logs -f // to see logs of docker
docker-compose ps // to see al conatiners created by docker-compose

docker-compose -f <path/to/docker-compose.yml> * // to spsify the command to a docker file/compose